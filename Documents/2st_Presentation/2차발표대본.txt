<제목 페이지>
안녕하십니까, 우리 조의 IOT와임베디드소프트웨어 프로젝트 발표를 맡은 이정빈입니다.

<목차 페이지>
이번 발표에선 
	1. 프로젝트의 진행상황
	2. 프로젝트에 사용된 디바이스 드라이버
	3. 시연
순서로 발표를 하겠습니다.

우선 프로젝트의 진행상황을 알려드리겠습니다.

<구상도 보여줌>
우리 프로젝트는 이전에 보여드린 이 구상도를 토대로 진행하였습니다.

<완성된 사진 보여줌>
그리고 이렇게 실제로 완성하게 되었죠

처음 계획한대로 잘 구현되었습니다.

<프로젝트 release 디렉터리 보여줌>
우리 프로젝트의 릴리즈 디렉터리 내부를 보면 다음과 같습니다.

LED 드라이버와 서보모터 드라이버가 있고, 
동작에 필요한 jar 프로그램과 실제 구동 프로그램이 존재합니다.

<insmod.sh 코드를 보여줌>
insmod.sh 파일은 실행시키면 장치드라이버를 넣고 권한을 조정해주는 
코드가 들어있습니다.

<led 드라이버 코드의 write부분을 보여줌>
우선 led 드라이버입니다.

우리는 led 4개를 쓰기때문에 write 함수가 크기 4의 char 배열을 전달받습니다.

빨강, 노랑, 초록, 파랑 순으로 0이면 끄고 1이면 켜는 동작을 수행합니다.

간단합니다.


다음은 서보모터입니다.

서보모터 드라이버는 pwm을 이용합니다.

우리가 사용한 SG90 서보모터는 

<sg90 데이터시트 보여주기>
pwm Period가 20ms, Duty Cycle이 1 ~ 2ms에서 동작하고
1ms일때 -90도, 2ms일때 90도로 돌아갑니다.

<서보모터 드라이버의 init 부분을 보여줌>
우선 init 부분에서 pwm_request()를 통해 pwm0번을 받아옵니다.

그리고 pwm_config()를 통해 서보모터를 돌립니다.

<서보모터 드라이버의 write 부분을 보여줌>
이 함수에서 사용하는 단위는 ns이므로 ms를 ns로 변환해야합니다.

따라서 Period는 20,000,000ns
Duty Cycle은 1,000,000 ~ 2,000,000ns를 오가면 된다는 계산이 나옵니다.

하지만 실제로 해보니 저 값으로 원하는 동작이 안되더군요.

<서보모터 드라이버의 duty cycle 주석을 보여줌>
그래서 일일히 대입해보면서 원하는 동작이 되는 Duty Cycle 값을 찾아내 적용했습니다.


<동작 프로그램 코드 보여줌>
다음은 동작 프로그램입니다.

프로그램을 시작하면 원래는 동작을 시작합니다만, 
장치가 1시간마다 동작하기 때문에 
시연을 위해 테스트 케이스를 동작시킬 수 있도록 해두었습니다.

우선 run을 하면 jar 파일을 exec해서 날씨 정보를 읽어옵니다.

읽어온 파일을 열어서 파일에 적힌대로 장치를 설정합니다.

이 동작을 한 시간마다 반복합니다.


이제 동작하는 모습을 보여드리겠습니다.

우선 현재 날씨를 읽어와보겠습니다.

이런 날씨가 나왔네요.

지금 날씨앱을 켜서 확인을 해볼까요?

네, 요래 요래 요래 정확하네요!

그리고 테스트 케이스도 동작시켜보겠습니다.

<동작시킨 후>
네, 이렇게 우리 프로젝트의 결과물의 발표를 마치겠습니다. 

우리 조의 코드는 https://github.com/binn328/IOT_Project 에 들어가시면 볼 수 있습니다.

감사합니다.